    /*
 * BASE STYLES
 * ================================ */
    
    //box-sizing model = margin and paddgin inside element so they don't increase width of component.
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }
    
    html,
    body {
        width: 100%;
        height: 100%;
        margin: 0px;
        padding: 0px;
        overflow-x: hidden;
    }
    
    html {}
    
    .hidden {
        display: none;
    }
    
    

 
.btn-none{
top:20px;
right:20px;
position: absolute;
background:none;
border:none;
 
    
}

    /*------------------------------------*\
  #RESPONSIVE_SCREEN_SIZE
\*------------------------------------*/
    /*-------#MAIN-------*/
    
    ul li {
        list-style-type: none;
    }
 
    .section-definer {  
        width: 100%; 
        
    }
       
.section-definer-light {
         @extend .section-definer;
    background-color:blue;
    }

.section-definer-medium {
         @extend .section-definer;
    background-color:white;
    }

.section-definer-dark {
         @extend .section-definer;
    background-color:$black;
    }
         .section-resized {
       
             
             
      padding-top: $nav-size*2;
       padding-bottom: 100px;
       width: 960px;
       max-width: 100%;
        margin: auto;     
        @include breakpoint ($min: xs) {
            width: 350px;
            max-width: 100%;
        }
        @include breakpoint ($min: sm) {
            width: 620px;
            max-width: 100%;
        }
        @include breakpoint ($min: md) {
            width: 720px;
            max-width: 100%;
        }
        @include breakpoint ($min: lg) {
            width: 1100px;
            max-width: 100%;
        }
        @include breakpoint ($min: xl) {
            width: 1240px;
            max-width: 100%;
        }
    }


    /*------------------------------------*\
  #FONTS
\*------------------------------------*/
    
    @font-face {
        font-family: BoldFont;
        src: url(../fonts/Exo-SemiBold.ttf);
        font-weight: bold;
    }
    
    @font-face {
        font-family: TextFont;
        src: url(../fonts/Ayuthaya.ttf);
        font-weight: regular;
    }
    
    //responsive font sizes 
    .title {
        font-family: BoldFont;
        color: $black;
        padding: 2vh 0 2vh;
        @include breakpoint($min: xs) {
            font-size: map-deep-get($typescale, 'heading1', 'xs');
        }
        @include breakpoint($min:sm) {
            font-size: map-deep-get($typescale, 'heading1', 'sm');
        }
        @include breakpoint($min:md) {
            font-size: map-deep-get($typescale, 'heading1', 'md');
        }
        @include breakpoint($min:lg) {
            font-size: map-deep-get($typescale, 'heading1', 'lg');
        }
        @include breakpoint($min:xl) {
            font-size: map-deep-get($typescale, 'heading1', 'lg');
        }
    }
    
    .subtitle {
        font-family: BoldFont;
        color: $black;
        @include breakpoint($min: xs) {
            font-size: map-deep-get($typescale, 'sub1', 'xs');
        }
        @include breakpoint($min:sm) {
            font-size: map-deep-get($typescale, 'sub1', 'sm');
        }
        @include breakpoint($min:md) {
            font-size: map-deep-get($typescale, 'sub1', 'md');
        }
        @include breakpoint($min:lg) {
            font-size: map-deep-get($typescale, 'sub1', 'lg');
        }
    }
    
    .text {
        font-family: TextFont;
        color: $main-color50;
        @include breakpoint($min: xs) {
            font-size: map-deep-get($typescale, 'text1', 'xs');
        }
        @include breakpoint($min:sm) {
            font-size: map-deep-get($typescale, 'text1', 'sm');
        }
        @include breakpoint($min:md) {
            font-size: map-deep-get($typescale, 'text1', 'md');
        }
        @include breakpoint($min:lg) {
            font-size: map-deep-get($typescale, 'text1', 'lg');
        }
    }
    
    .smalltext {
        @include breakpoint($min: xs) {
            font-size: map-deep-get($typescale, 'smalltext1', 'xs');
        }
        @include breakpoint($min:sm) {
            font-size: map-deep-get($typescale, 'smalltext1', 'sm');
        }
        @include breakpoint($min:md) {
            font-size: map-deep-get($typescale, 'smalltext1', 'md');
        }
        @include breakpoint($min:lg) {
            font-size: map-deep-get($typescale, 'smalltext1', 'lg');
        }
    }
    /*------------------------------------*\
  #BODY
\*------------------------------------*/
    
    body {
        min-height: 100%;
        height: auto;
        background-color:$light;
        color: $black;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        @extend .text;
    }
    /*------------------------------------*\
  #LINKS
\*------------------------------------*/
    
    a {
        color: $main-color;
        text-decoration: none;
        transition: all 0.2s ease-in-out;
        cursor: pointer;
        &:hover {
            text-decoration: none;
            opacity: 0.7;
        }
    }