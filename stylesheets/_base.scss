    /*
 * BASE STYLES
 * ================================ */
    
    //box-sizing model = margin and paddgin inside element so they don't increase width of component.
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }
    
    html,
    body {
        width: 100%;
        height: 100%;
        margin: 0px;
        overflow-x: hidden;
    }
    
    html {}
    /*------------------------------------*\
  #RESPONSIVE_SCREEN_SIZE
\*------------------------------------*/
    /*-------#MAIN-------*/
    
    .main {
        padding-top: $nav-size*2;
        padding-bottom: 100px;
        width: 960px;
        max-width: 100%;
        margin: auto;
        @media only screen and (min-width: 200px) and (max-width: 480px) {
            width: 370px;
            max-width: 100%;
        }
        @media only screen and (min-width: 480px) and (max-width: 800px) {
            width: 690px;
            max-width: 100%;
        }
        @media (min-width: 800px) and (max-width: 1280px) {
            width: 920px;
            max-width: 100%;
        }
        @media screen and (min-width: 1280px) {
            width: 1100px;
            max-width: 100%;
        }
        
    }
    /*------------------------------------*\
  #FONTS
\*------------------------------------*/
    
    @font-face {
        font-family: BoldFont;
        src: url(../fonts/Exo-SemiBold.ttf);
        font-weight: bold;
    }
    
    @font-face {
        font-family: TextFont;
        src: url(../fonts/Ayuthaya.ttf);
        font-weight: regular;
    }
    
    //responsive font sizes 
    .title {
        font-family: BoldFont;
        color: $black;
        padding: 2vh 0 2vh;
        @media only screen and (min-width: 200px) and (max-width: 480px) {
            font-size: map-deep-get($typescale, 'heading1', 'xs');
        }
        @media only screen and (min-width: 480px) and (max-width: 800px) {
            font-size: map-deep-get($typescale, 'heading1', 'sm');
        }
        @media (min-width: 800px) and (max-width: 1280px) {
            font-size: map-deep-get($typescale, 'heading1', 'md');
        }
        @media screen and (min-width: 1280px) {
            font-size: map-deep-get($typescale, 'heading1', 'lg');
        }
    }
    
    .subtitle {
        font-family: BoldFont;
        color: $black;
        @media only screen and (min-width: 200px) and (max-width: 480px) {
            font-size: map-deep-get($typescale, 'sub1', 'xs');
        }
        @media only screen and (min-width: 480px) and (max-width: 800px) {
            font-size: map-deep-get($typescale, 'sub1', 'sm');
        }
        @media (min-width: 800px) and (max-width: 1280px) {
            font-size: map-deep-get($typescale, 'sub1', 'md');
        }
        @media screen and (min-width: 1280px) {
            font-size: map-deep-get($typescale, 'sub1', 'lg');
        }
    }
    
    .text {
        font-family: TextFont;
        color: $main-color50;
        @media only screen and (min-width: 200px) and (max-width: 480px) {
            font-size: map-deep-get($typescale, 'text1', 'xs');
        }
        @media only screen and (min-width: 480px) and (max-width: 800px) {
            font-size: map-deep-get($typescale, 'text1', 'sm');
        }
        @media (min-width: 800px) and (max-width: 1280px) {
            font-size: map-deep-get($typescale, 'text1', 'md');
        }
        @media screen and (min-width: 1280px) {
            font-size: map-deep-get($typescale, 'text1', 'lg');
        }
    }
    
    .smalltext {
        @media only screen and (min-width: 200px) and (max-width: 480px) {
            font-size: map-deep-get($typescale, 'smalltext1', 'xs');
        }
        @media only screen and (min-width: 480px) and (max-width: 800px) {
            font-size: map-deep-get($typescale, 'smalltext1', 'sm');
        }
        @media (min-width: 800px) and (max-width: 1280px) {
            font-size: map-deep-get($typescale, 'smalltext1', 'md');
        }
        @media screen and (min-width: 1280px) {
            font-size: map-deep-get($typescale, 'smalltext1', 'lg');
        }
    }
    /*------------------------------------*\
  #BODY
\*------------------------------------*/
    
    body {
        min-height: 100%;
        height: auto;
        background-color: rgba(0, 0, 0, 0.64);
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        @extend .text;
    }
    /*------------------------------------*\
  #LINKS
\*------------------------------------*/
    
    a {
        color: $main-color;
        text-decoration: none;
        transition: all 0.2s ease-in-out;
        cursor: pointer;
        &:hover {
            text-decoration: none;
            opacity: 0.7;
        }
    }